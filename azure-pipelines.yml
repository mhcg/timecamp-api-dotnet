# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macos-latest'
    windows:
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

variables:
  buildConfiguration: 'Release'
  dotnetSdkVersion: '3.1.x'
  buildProjects: 'TimeCampAPI.Core/*.csproj'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore $(buildConfiguration) on $(imageName)'
  inputs:
    command: 'restore'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build $(buildConfiguration) on $(imageName)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '$(buildProjects)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test $(buildConfiguration) on $(imageName)'
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish $(buildConfiguration) on $(imageName)'
  inputs:
    command: 'publish'
    projects: '$(buildProjects)'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(imageName)/$(buildConfiguration)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  condition: succeeded()
